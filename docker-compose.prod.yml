version: "3.8"

services:
  socket-proxy:
    image: tecnativa/docker-socket-proxy:latest
    container_name: socket-proxy
    environment:
      - CONTAINERS=1
      - SERVICES=1
      - TASKS=1
      - NETWORKS=1
      - EVENTS=1
      - INFO=1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - app-network
    restart: unless-stopped

  traefik:
    image: traefik:v3.1
    container_name: traefik
    command:
      # 엔트리포인트
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      # http → https 리다이렉트
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      # 도커 프로바이더 활성화
      - --providers.docker=true
      - --providers.docker.endpoint=tcp://socket-proxy:2375
      - --providers.docker.exposedbydefault=false
      # Let's Encrypt 인증서 설정
      - --certificatesresolvers.le.acme.email=medsnap.cloud@gmail.com
      - --certificatesresolvers.le.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.le.acme.httpchallenge=true
      - --certificatesresolvers.le.acme.httpchallenge.entrypoint=web
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - traefik_letsencrypt:/letsencrypt
    environment:
      - DOCKER_HOST=tcp://socket-proxy:2375
    networks:
      - app-network
    depends_on:
      - socket-proxy

  app:
    build: ./backend
    env_file:
      - .env.prod
    environment:
      SPRING_PROFILES_ACTIVE: prod
    labels:
      - "traefik.enable=true"
      # http → https 리다이렉트 이후 https 엔드포인트
      - "traefik.http.routers.app.rule=Host(`hiedu.site`)"
      - "traefik.http.routers.app.entrypoints=websecure"
      - "traefik.http.routers.app.tls.certresolver=le"
      # 컨테이너 내부 포트
      - "traefik.http.services.app.loadbalancer.server.port=8080"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
    depends_on:
      - ai-server
    networks:
      - app-network

  ai-server:
    build: ./ai-server
    container_name: ai-server
    restart: unless-stopped
    ports:
      - "8080:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
    networks:
      - app-network

volumes:
  traefik_letsencrypt:
    name: traefik_letsencrypt

networks:
  app-network:
    driver: bridge